#!/usr/bin/env bash

usage () {
    cat <<EOF
Usage: nupdate-nodelist nodename path-to-for-use hjson-pre hjson-post [ignore_pat] [pat_vianode]

This script writes out a nncp.hjson on stdout and needs these parameters:

Where:

nodename is the name of the local NNCP node

path-to-for-use points to the for-use directory from a quux nodelist
tarball

hjson-pre is the path to the fragment of the hjson to use before the
inserted nodes

hjson-post is the path to the fragment of the hjson to use after the
inserted nodes.

ignore_pat, optional, is a pattern matched against the filename
with egrep -v that gives nodes to ignore when writing the default
quux via lines; it indicates locally-connected machines

pat_vianode, optional, is a replacement via: node to insert when
ignore_pat matches.
EOF
    exit 10
}

set -eou pipefail

NODENAME="$1"
FORUSE_PATH="$2"
HJSON_PRE="$3"
HJSON_POST="$4"
IGNORE_PAT="$5"
PAT_VIANODE="$6"

if [ -z "$NODENAME" ]; then
    usage
fi
if [ ! -d "$FORUSE_PATH" ]; then
    usage
fi
if [ ! -f "$HJSON_PRE" ]; then
    usage
fi
if [ ! -f "$HJSON_POST" ]; then
    usage
fi

cat "$HJSON_PRE"
pushd "$FORUSE_PATH" &> /dev/null
rm "$NODENAME"
for FILE in *; do
    echo "$FILE: {"
    cat "$FILE"
    if [ -z "$IGNORE_PAT"  ]; then
        # No IGNORE_PAT given; just write the default via.
        echo 'via: ["quux"]'
    elif echo "$NODENAME" | grep -E -v "$IGNORE_PAT"; then
        # IGNORE_PAT given and we don't match it
        echo 'via: ["quux"]'
    elif [ -n "$PAT_VIANODE" ]; then
        # We do match IGNORE_PAT and we have a PAT_VIANODE
        echo "via: [\"$PAT_VIANODE\"]"
    fi
    echo '}'
done

popd &> /dev/null
cat "$HJSON_POST"
