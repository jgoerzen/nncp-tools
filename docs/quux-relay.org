#+TITLE: Using the quux.org public NNCP relay

* Introduction to NNCP

According to the [[https://nncp.mirrors.quux.org/][NNCP documentation]], NNCP is intended to help build up small size ad-hoc friend-to-friend (F2F) statically routed darknet delay-tolerant networks for fire-and-forget secure reliable files, file requests, Internet mail and commands transmission. All packets are integrity checked, end-to-end encrypted, explicitly authenticated by known participants public keys. Onion encryption is applied to relayed packets. Each node acts both as a client and server, can use push and poll behaviour model. Also there is multicasting area support.

* Introduction to the Quux Public Relay

The Quux Public Relay hopes to facilitate several use cases:

1. You wish to exchange NNCP packets between devices that have an Internet connection, but lack a stable IP or the ability to accept incoming connections.  In this case, you can route your packets via quux to achieve easy communication without having to resort to VPNs and such.

2. You wish to exchange NNCP packets with friends known to you.  By using a relay with stable Internet access, you simplify the task in a similar way as with case 1.

3. You want to help build a larger NNCP network, including peers unknown to you.  By offloading the connectivity and routing to quux, this task is simplified for everyone.  NNCP has also not been used much in this way, but has compelling advantages over other tools such as UUCP, so we are hoping to learn from this effort how NNCP might work in a more public way.

** Experimental Nature of this Relay

This relay is experimental and, while it is hosted on dedicated hardware at a datacenter, it is done as a best-effort basis.  Thankfully NNCP offers may other ways to exchange packets in the event quux is unavailable.

No guarantee about correctness of operation, longevity, or uptime of this system is available.

** How it works

NNCP allows you to route packets via intermediate machines on their way to their destination.  Because all the packets are encrypted and use onion routing, quux is unable to access the data traversing it.

NNCP packets are routed using the =via= configuration or command-line option.  You can specify a complete path to reach a destination.  Alternatively, you can simply route packets leaving your network via =quux=, and quux will handle the proper routing at the next step to get them to their destination.

quux is fundamentally a normal NNCP installation that happens to be willing to peer with the public, and runs a few scripts to help maintain nodelists and such.

* Joining the quux NNCP relay

To join, please send an email to jgoerzen@complete.org requesting addition.  I will need certain information from you:

- The preferred nodename for your system.  Note that you can use whatever nodename you like locally, since they are just aliases for NNCP ids.  This is to help others in the nodelist.

- If your system is permanently online on the Internet, reachable at a known hostname/port, and you wish this to be published in the nodelist, let me know. This is completely optional; it is assumed most systems will not be reachable in this way.  However, if we have ones that are, then the relay server can also establish outbound connections to you.

- If the host will not communicate directly with quux, the via path used to reach it.

- The self section FROM WITHIN THE neigh BLOCK of your nncp.hjson.  It should
  look like this:

  #+begin_example
neigh: {
  self: {
    # You should give public keys below to your neighbours
    id: RKOLY...KAMXQ
    exchpub: 2NZKH...CMI7A
    signpub: EXD7M...YAOFA
    noisepub: MIXYN...BGNDQ
  }
}
  #+end_example

Upon receiving your request, you will be added to the server configuration and
the public nodelist.

Here is a template you can cut and paste and edit to provide it:

#+begin_example
I'm requesting to join the quux NNCP relay.

Preferred nodename:

Hostname/port to publish, if any:

via path, if any:
#+end_example

* Local Setup

** Configuration

Add these lines to the neigh section of your nncp.hjson:

#+begin_example
    quux: {
      id: SXNADKNYBOU6VPDVZHZZGHPJXDDZTDWDT4YAQ5TJHBA6FTNUHTCA
      exchpub: 7L4GZ4LKXZREZFSBKCBX4CGUTLYKUHR4KNQ3O6NPJGGM6C5YGAPQ
      signpub: HS2Q2DNZWWCFY4V2UGYYJZFU4UPTUBFOTFYBY25QNOKDNG2OBKDQ
      noisepub: C7JASCAKJDRQNWNBOUX6WGFN4U7KC3NFU472IW43NJIBUB3V3EZQ

      addrs: {
        internet: "nncp.quux.org:5400"
      }
      incoming: "/tmp" # (or more appropriate path); may be omitted after testing
    }
#+end_example

Then restart your daemons and verify things have loaded appropriately.

** Testing

Once you receive confirmation that your node has been added to the server,
you can test your configuration by requesting this file from the remote:

nncp-freq quux:README.txt

After packets are exchanged and tossed after a few minutes, you should have
a copy of README.txt in the directory you labeled as incoming in your
configuration.  At this point, if you no longer wish to be able to
receive freqs or files from quux, you may delete or comment out the
incoming line in your configuration.  However, you probably will want
to be able to freq files from quux; read on.

* The Nodelist

Part of the fun of this relay is discovering other peers around the world.

To that end, every peer on this relay is mentioned in the nodelist.

Download the latest nodelist with:

#+begin_example
nncp-freq quux:nodelist.zip
#+end_example


Upon unpacking, you will find a directory with nncp.hjson fragments corresponding to the nodes in the system.

You can use a script such as this to emit a more cohesive nncp.hjson blub:

#+begin_src sh
rm MYNODE    # Delete your own node; that will be processed under "self"
for FILE in *; do
   echo "$FILE: {"
   cat "$FILE"
   echo 'via: ["quux"]'
   echo '}'
   # Here you could add lines about incoming dirs, via path
done
#+end_src

Then, if you have two ready-made nncp.hsjon segments -- the bit before this
part of the neigh section, this part, and then the end, you could form the
complete nncp.hjson like so (assuming the above script is in cat-nodelist):

#+begin_src sh
cat nncp.hjson.pre > nncp.hjson
cat-nodelist >> nncp.hjson
cat nncp.hjson.post >> nncp.hjson
#+end_src

* Access via Tor

As an advanced option, you may access the quux.org NNCP system via a tor
hidden service.  To do so, add this to your addrs section for quux:

#+begin_example
tor: "|nc -X 5 -x 127.0.0.1:9050 akii45bolkchh5ulheaqip7amvy53ctt3crihzgzn3dgsk4jzj6ofuad.onion 5400"
#+end_example

This assumes that the tor SOCKS5 proxy is running on port 9050 on localhost,
and that you have netcat installed.  You may need to installl netcat and
tor if you don't have them installed already.

* Expectations

Treat quux and your fellow humans kindly.

quux does not have visibility into the packets that traverse the node, but nevertheless, if we become aware of harassment, unethical behavior, excessive storage use, or illegal activities using the quux node, appropriate action will be taken.

We ask at this time that you please do not cause more than 1GB to be stored on quux, and would prefer that you keep your quux-transit packets smaller than that if at all possible.  quux is hosted on enterprise SSDs which can't handle multi-TB packets!

* Privacy

Your data is end-to-end encrypted and quux has no visibility into it.

Submitted data, including your name, email address, public host keys, and hostname/port, will be made available to all other present or future members of this relay server and may be published elsewhere on the Internet from time to time.

* Removal

If you wish to be removed from the relay server, email jgoerzen@complete.org with your request.

* Source

https://github.com/jgoerzen/nncp-tools

* Copyright


These files are Copyright (c) 2021 John Goerzen.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
